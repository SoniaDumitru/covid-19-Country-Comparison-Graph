{"version":3,"sources":["components/Graph.js","App.js","index.js"],"names":["Graph","firstLabel","secondLabel","data","className","width","height","strokeDasharray","dataKey","stroke","activeDot","r","App","useState","setData","isLoading","setIsLoading","options","setOptions","setFirstLable","setSecondLabel","firstSelect","setFirstSelect","secondSelect","setSecondSelect","runCall","a","fetchData","apiValue","header","split","slice","map","line","firstPrep","secondPrep","firstLbl","toUpperCase","secondLbl","formatData","i","length","newRow","name","parseInt","push","countriesList","countriesArr","label","reverse","join","value","requestOption","method","redirect","fetch","response","ok","text","console","log","useEffect","onChange","input","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d224db74.chunk.js","sourcesContent":["import React from 'react'\nimport {\n    LineChart, \n    Line, \n    XAxis, \n    YAxis, \n    CartesianGrid, \n    Tooltip, \n    Legend,\n} from 'recharts';\n\n\nfunction Graph({ firstLabel, secondLabel, data }) {\n    return (\n        <div className=\"content-wrap\">\n            <LineChart\n                width={800}\n                height={500}\n                data={data}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis/>\n                <Tooltip/>\n                <Legend/>\n                <Line \n                    dataKey={firstLabel} \n                    stroke=\"#8884d8\" \n                    activeDot={{ r: 8 }} \n                />\n                <Line \n                    dataKey={secondLabel} \n                    stroke=\"#87d110\" \n                    activeDot={{ r: 8 }} \n                />\n            </LineChart>\n        </div>\n    )\n}\n\n\nexport default Graph;","import React, { useState, useEffect } from 'react';\n\n// Styling\nimport './App.css';\n\n// Components\nimport Graph from './components/Graph';\nimport Select from 'react-select';\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [options, setOptions] = useState([])\n  const [firstLabel, setFirstLable] = useState('US');\n  const [secondLabel, setSecondLabel] = useState('ROMANIA');\n  const [firstSelect, setFirstSelect] = useState(212);\n  const [secondSelect, setSecondSelect] = useState(249);\n\n  // fetch data\n  const runCall = async () => {\n    let apiValue = await fetchData();\n    const header = apiValue.split('\\n').slice(0).map(line => (line.split(',')))[0].slice(4);\n\n    const firstPrep = apiValue.split('\\n').slice(0).map(line => (line.split(',')))[firstSelect]\n    const secondPrep = apiValue.split('\\n').slice(0).map(line => (line.split(',')))[secondSelect]\n\n    const firstLbl = firstPrep[1].toUpperCase();\n    const secondLbl = secondPrep[1].toUpperCase();\n\n    const formatData = [];\n    for (let i = 4; i < header.length; i++) {\n      const newRow = {};\n      newRow.name = header[i];\n      newRow[firstLbl] = parseInt(firstPrep[i]);\n      newRow[secondLbl] = parseInt(secondPrep[i]);\n      formatData.push(newRow);\n    }\n\n    const countriesList = apiValue.split('\\n').slice(1).map(line => (line.split(',').slice(0, 2)));\n    const countriesArr = [];\n    for (let i = 0; i < countriesList.length; i++) {\n      countriesArr.push({ label: countriesList[i].reverse().join(' '), value: i + 1 })\n    }\n\n    setFirstLable(firstLbl);\n    setSecondLabel(secondLbl);\n    setOptions(countriesArr);\n    setData(formatData);\n    setIsLoading(false);\n    return null;\n  }\n\n  // inner helper fetch function\n  const fetchData = async () => {\n    const requestOption = {\n      method: \"GET\",\n      redirect: \"follow\"\n    }\n\n    const apiUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv`\n\n    try {\n      const response = await fetch(apiUrl, requestOption);\n      return response.ok ? response.text() : null\n    } catch (err) {\n      console.log(err);\n      return null;\n    }\n  }\n\n  // calls api everytime select changes \n  useEffect(() => {\n    runCall();\n  }, [firstSelect, secondSelect])\n\n  const firstInput = (input) => {\n    setFirstSelect(input.value)\n  }\n\n  const secondInput = (input) => {\n    setSecondSelect(input.value)\n  }\n\n  return (\n    <div className=\"app-wrap\">\n      <h1>COVID-19 Country Comparator</h1>\n      {isLoading ?\n        <div>loading...</div> :\n        <div className=\"content-wrap\">\n          <Graph \n            data={data} \n            firstLabel={firstLabel} \n            secondLabel={secondLabel} \n          />\n          <div className=\"selector-wrap\">\n            <Select \n              options={options} \n              onChange={firstInput} \n              placeholder=\"ROMANIA\" \n            />\n            <Select \n              options={options} \n              onChange={secondInput} \n              placeholder=\"US\" \n            />\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}